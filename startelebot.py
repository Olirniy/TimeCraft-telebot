# –¢–µ–ª–µ–≥—Ä–∞–º–º-–±–æ—Ç —Ä–µ–∞–ª–∏–∑—É—é—â–∏–π –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏–∫–∏ —Ç–∞–π–º-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
#
# –ö–ª—é—á–µ–≤–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:
# –î–≤–∞ —Ä–µ–∂–∏–º–∞ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏: 1 - —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è. 2 - —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
# –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ pause.
# –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–æ–∫ (–º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –±–ª–æ–∫ –∑–∞–ø—É—Å–∫–∞).
# –ù–∞–ª–∞–∂–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
# –ù–∞–ª–∞–∂–µ–Ω –∑–∞–ø—É—Å–∫ –∫–∞–∂–¥–æ–π —Å–µ—Å—Å–∏–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ:
# (—Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏).
# –î–æ–±–∞–≤–ª–µ–Ω—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–æ—Ç–æ–∫–æ–≤: —Ç–µ–ø–µ—Ä—å –±–æ—Ç —Ä–µ–∞–ª–∏–∑—É–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å
# –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫.
# –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ BOT_TOKEN —á–µ—Ä–µ–∑ (config.json)



import telebot
from telebot import types
import logging
import os
import json
import random
import datetime
import time
import threading

# ====== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ======

# ====== –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞ ======
def load_config():
    try:
        with open('config.json', 'r') as f:
            config = json.load(f)
        return config
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ config.json: {e}")
        raise

config = load_config()

BOT_TOKEN = config['BOT_TOKEN']
ADMIN_CHAT_ID = config['ADMIN_CHAT_ID']
DATA_FILE = config.get('DATA_FILE', 'user_states.json')  # –ù–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –Ω–µ—Ç –∫–ª—é—á–∞

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
user_admin_mapping = {}
stop_flags = {}
pause_flags = {}
pause_times = {}
user_states = {}
active_threads = {}


# ====== –§—É–Ω–∫—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ======
def create_keyboard():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    buttons = ["Beginner", "Intermediate", "Advanced", "Stop", "Pause", "Help"]
    keyboard.add(*buttons)
    return keyboard


def send_keyboard(chat_id, text):
    bot.send_message(chat_id, text, reply_markup=create_keyboard())


# ====== –§—É–Ω–∫—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö ======

def save_data():
    data = {
        'admin_chat_id': ADMIN_CHAT_ID,  # –¢–µ–ø–µ—Ä—å —ç—Ç–æ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –∏–∑ config.json
        'user_admin_mapping': user_admin_mapping,
        'user_states': user_states
    }
    with open(DATA_FILE, 'w') as f:
        json.dump(data, f)


def load_data():
    global ADMIN_CHAT_ID, user_admin_mapping, user_states
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, 'r') as f:
            data = json.load(f)
            ADMIN_CHAT_ID = data.get('admin_chat_id')
            user_admin_mapping = data.get('user_admin_mapping', {})
            user_states = data.get('user_states', {})
        logging.info("–î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")


# ====== –û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ ======
@bot.message_handler(commands=['start'])
def handle_start(message):
    welcome_text = """
    –ü—Ä–∏–≤–µ—Ç! –Ø TimeCraft - —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ç–∞–π–º-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç—É.
    –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
    - Beginner: –°–µ—Å—Å–∏—è 25/5/15
    - Intermediate: –°–µ—Å—Å–∏—è 35/7/20
    - Advanced: –°–µ—Å—Å–∏—è 50/10/30
    - Stop: –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é
    - Pause: –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/–≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é
    - Help: –ü–æ–º–æ—â—å
    - /setadmin - —Å—Ç–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    - /unsetadmin - –æ—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    """
    send_keyboard(message.chat.id, welcome_text)


@bot.message_handler(commands=['setadmin'])
def handle_setadmin(message):
    global ADMIN_CHAT_ID
    ADMIN_CHAT_ID = message.chat.id
    send_keyboard(ADMIN_CHAT_ID, "‚ö° –í—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /unsetadmin —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å —ç—Ç–æ—Ç —Ä–µ–∂–∏–º.")
    save_data()


@bot.message_handler(commands=['unsetadmin'])
def handle_unsetadmin(message):
    global ADMIN_CHAT_ID
    if message.chat.id == ADMIN_CHAT_ID:
        ADMIN_CHAT_ID = None
        save_data()
        send_keyboard(message.chat.id,
                      "üîì –†–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç–∫–ª—é—á–µ–Ω. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç –∫–∞–∫ –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.")
    else:
        bot.reply_to(message, "‚ö†Ô∏è –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")


@bot.message_handler(func=lambda m: True)
def handle_all_messages(message):
    if message.text.startswith('/'):
        return

    text = message.text.lower()

    if message.chat.id == ADMIN_CHAT_ID:
        if message.reply_to_message:
            handle_admin_reply(message)
        return

    if text == "help":
        send_help(message.chat.id)
    elif text in ["beginner", "intermediate", "advanced"]:
        start_timecraft_session(message)
    elif text == "stop":
        stop_timecraft_session(message.chat.id)
    elif text == "pause":
        toggle_pause_session(message.chat.id)
    elif ADMIN_CHAT_ID and message.chat.id != ADMIN_CHAT_ID:
        forward_to_admin(message)


def send_help(chat_id):
    help_text = """
    –ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:
    - Beginner: 25 –º–∏–Ω —Ä–∞–±–æ—Ç–∞ / 5 –º–∏–Ω –ø–µ—Ä–µ—Ä—ã–≤
    - Intermediate: 35 –º–∏–Ω —Ä–∞–±–æ—Ç–∞ / 10 –º–∏–Ω –ø–µ—Ä–µ—Ä—ã–≤
    - Advanced: 50 –º–∏–Ω —Ä–∞–±–æ—Ç–∞ / 15 –º–∏–Ω –ø–µ—Ä–µ—Ä—ã–≤
    - Stop: –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é
    - Pause: –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/–≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å —Å–µ—Å—Å–∏—é
    """
    send_keyboard(chat_id, help_text)


# ====== –õ–æ–≥–∏–∫–∞ TimeCraft ======
TIMECRAFT_SETTINGS = {
    "beginner": {"work": 1 * 60, "short": 1 * 60, "long": 15 * 60, "sessions": 4},
    "intermediate": {"work": 35 * 60, "short": 10 * 60, "long": 20 * 60, "sessions": 4},
    "advanced": {"work": 50 * 60, "short": 15 * 60, "long": 30 * 60, "sessions": 4}
}


def toggle_pause_session(chat_id):
    """–ü—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∏–ª–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é"""
    if chat_id not in pause_flags:
        pause_flags[chat_id] = False

    if pause_flags[chat_id]:
        # –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Å—Å–∏—é
        pause_flags[chat_id] = False
        paused_time = time.time() - pause_times.get(chat_id, time.time())
        bot.send_message(chat_id,
                         f"‚ñ∂Ô∏è –°–µ—Å—Å–∏—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∞. –ü–∞—É–∑–∞ –¥–ª–∏–ª–∞—Å—å {int(paused_time // 60)} –º–∏–Ω {int(paused_time % 60)} —Å–µ–∫")
    else:
        # –ü—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Å—Å–∏—é
        pause_flags[chat_id] = True
        pause_times[chat_id] = time.time()
        bot.send_message(chat_id, "‚è∏Ô∏è –°–µ—Å—Å–∏—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ù–∞–∂–º–∏—Ç–µ Pause –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.")


def start_timecraft_session(message):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Å—Å–∏—é TimeCraft"""
    chat_id = message.chat.id
    level = message.text.lower()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–π –ø–æ—Ç–æ–∫ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if chat_id in active_threads and active_threads[chat_id].is_alive():
        send_keyboard(chat_id, "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è!")
        return

    if level not in TIMECRAFT_SETTINGS:
        send_keyboard(chat_id, "–ù–µ–≤–µ—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å!")
        return

    stop_flags[chat_id] = False
    pause_flags[chat_id] = False
    user_states[chat_id] = {
        "level": level,
        "sessions_done": 0
    }
    save_data()

    send_keyboard(chat_id, f"–°—Ç–∞—Ä—Ç {level} —É—Ä–æ–≤–Ω—è!")

    # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è —Å–µ—Å—Å–∏–∏
    session_thread = threading.Thread(
        target=run_session_cycle,
        args=(chat_id, level),
        daemon=True  # –ü–æ—Ç–æ–∫ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
    )
    active_threads[chat_id] = session_thread
    session_thread.start()


def stop_timecraft_session(chat_id):
    """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é"""
    if chat_id in stop_flags and not stop_flags[chat_id]:
        stop_flags[chat_id] = True
        if chat_id in pause_flags:
            pause_flags[chat_id] = False

        # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞ (–Ω–æ –Ω–µ –±–æ–ª–µ–µ 2 —Å–µ–∫—É–Ω–¥)
        if chat_id in active_threads:
            active_threads[chat_id].join(timeout=2)
            del active_threads[chat_id]

        send_keyboard(chat_id, "–°–µ—Å—Å–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! –í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å!")
    else:
        send_keyboard(chat_id, "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏")


def run_session_cycle(chat_id, level):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç —Ü–∏–∫–ª —Å–µ—Å—Å–∏–π"""
    settings = TIMECRAFT_SETTINGS[level]

    while not stop_flags.get(chat_id, True):
        if user_states[chat_id]["sessions_done"] < settings["sessions"]:
            # –†–∞–±–æ—á–∞—è —Å–µ—Å—Å–∏—è
            run_phase(chat_id, "–†–∞–±–æ—á–∏–π –ø–µ—Ä–∏–æ–¥", settings["work"])
            if stop_flags.get(chat_id, True): break

            # –ö–æ—Ä–æ—Ç–∫–∏–π –ø–µ—Ä–µ—Ä—ã–≤ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è)
            if user_states[chat_id]["sessions_done"] < settings["sessions"] - 1:
                run_phase(chat_id, "–ö–æ—Ä–æ—Ç–∫–∏–π –ø–µ—Ä–µ—Ä—ã–≤", settings["short"])
                if stop_flags.get(chat_id, True): break

            user_states[chat_id]["sessions_done"] += 1
            save_data()

            # –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª–∞ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å–µ—Å—Å–∏—è - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥–ª–∏–Ω–Ω–æ–º—É –ø–µ—Ä–µ—Ä—ã–≤—É
            if user_states[chat_id]["sessions_done"] == settings["sessions"]:
                run_phase(chat_id, "–î–ª–∏–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤", settings["long"])
                if stop_flags.get(chat_id, True): break
                user_states[chat_id]["sessions_done"] = 0
                save_data()
        else:
            # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—Å—Ç–∞–≤–∏–º —ç—Ç–æ—Ç –±–ª–æ–∫ (—Ö–æ—Ç—è —Å –Ω–æ–≤—ã–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º —Å—é–¥–∞ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–æ–ø–∞–¥–∞—Ç—å)
            run_phase(chat_id, "–î–ª–∏–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤", settings["long"])
            if stop_flags.get(chat_id, True): break
            user_states[chat_id]["sessions_done"] = 0
            save_data()

    send_keyboard(chat_id, "–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


def run_phase(chat_id, phase_name, duration):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–¥–Ω—É —Ñ–∞–∑—É (—Ä–∞–±–æ—Ç—É –∏–ª–∏ –ø–µ—Ä–µ—Ä—ã–≤)"""
    if phase_name == "–î–ª–∏–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤" and user_states[chat_id]["sessions_done"] == \
            TIMECRAFT_SETTINGS[user_states[chat_id]["level"]]["sessions"]:
        start_msg = f"üéâ –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –≤—Å–µ —Å–µ—Å—Å–∏–∏ —É—Ä–æ–≤–Ω—è {user_states[chat_id]['level']}!\n"
        start_msg += f"‚è≥ –î–ª–∏–Ω–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤ ({duration // 60} –º–∏–Ω) –Ω–∞—á–∞—Ç –≤ {datetime.datetime.now().strftime('%H:%M')}"
    else:
        start_msg = f"‚è≥ {phase_name.capitalize()} –Ω–∞—á–∞—Ç –≤ {datetime.datetime.now().strftime('%H:%M')}"

    bot.send_message(chat_id, start_msg)

    remaining_time = duration
    while remaining_time > 0:
        if stop_flags.get(chat_id, True):
            return

        if pause_flags.get(chat_id, False):
            while pause_flags.get(chat_id, False):
                time.sleep(1)
                if stop_flags.get(chat_id, True):
                    return
            # –ü–æ—Å–ª–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞
            resume_msg = f"‚è≥ {phase_name.capitalize()} –ø—Ä–æ–¥–æ–ª–∂–µ–Ω –≤ {datetime.datetime.now().strftime('%H:%M')}"
            bot.send_message(chat_id, resume_msg)

        time.sleep(1)
        remaining_time -= 1

    if not stop_flags.get(chat_id, True):
        end_time = datetime.datetime.now().strftime("%H:%M")
        bot.send_message(chat_id, f"‚úÖ {phase_name.capitalize()} –∑–∞–≤–µ—Ä—à–µ–Ω –≤ {end_time}")

        if phase_name == "–†–∞–±–æ—á–∏–π –ø–µ—Ä–∏–æ–¥":
            send_motivation(chat_id)


sent_messages = set()


def send_motivation(chat_id):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–¥–Ω–æ —Å–ª—É—á–∞–π–Ω–æ–µ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    messages = [
        "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üéâ",
        "–¢—ã –º–æ–ª–æ–¥–µ—Ü! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! üí™",
        "–ï—â–µ –æ–¥–∏–Ω —à–∞–≥ –∫ —Ü–µ–ª–∏! üöÄ",
        "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å —ç—Ç–æ–π —Å–µ—Å—Å–∏–µ–π! üéâ",
        "–¢—ã –º–æ–ª–æ–¥–µ—Ü! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! üí™",
        "–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–µ–ø–µ—Ä—å —Ç—ã –±–ª–∏–∂–µ –∫ —Å–≤–æ–µ–π —Ü–µ–ª–∏! üåü",
        "–ö—Ä—É—Ç–æ! –¢—ã —Å–¥–µ–ª–∞–ª –µ—â—ë –æ–¥–∏–Ω —à–∞–≥ –∫ —É—Å–ø–µ—Ö—É! üöÄ",
        "–≠—Ç–∞ —Å–µ—Å—Å–∏—è –ø–æ–∑–∞–¥–∏! –û—Ç–¥–æ—Ö–Ω–∏ –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π –¥–≤–∏–∂–µ–Ω–∏–µ –≤–ø–µ—Ä—ë–¥! ‚è≥",
        "–î–µ—Ä–∂–∏—Å—å! –¢—ã –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏! üí™",
        "–¢—ã —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è –æ—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! üöÄ",
        "–ö–∞–∂–¥–∞—è –º–∏–Ω—É—Ç–∞ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç —Ç–µ–±—è –∫ —Ü–µ–ª–∏! ‚è≥",
        "–¢—ã –º–æ–∂–µ—à—å –≤—Å—ë, —á—Ç–æ –∑–∞–¥—É–º–∞–µ—à—å! ‚ú®",
        "–ù–µ —Å–¥–∞–≤–∞–π—Å—è ‚Äî —Ç—ã —É–∂–µ –±–ª–∏–∑–æ–∫ –∫ —É—Å–ø–µ—Ö—É! üåü",
        "–ú–∞–ª–µ–Ω—å–∫–∏–µ —à–∞–≥–∏ –ø—Ä–∏–≤–æ–¥—è—Ç –∫ –±–æ–ª—å—à–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º! üå±",
        "–¢—ã –¥–µ–ª–∞–µ—à—å –ø–æ—Ç—Ä—è—Å–∞—é—â—É—é —Ä–∞–±–æ—Ç—É! üëè",
        "–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è –∏ –¥–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä—ë–¥! üî•",
        "–¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –º–∞—Å—Ç–µ—Ä –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏! üí°",
        "–£—Å–ø–µ—Ö ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–∞–ª–µ–Ω—å–∫–∏—Ö –ø–æ–±–µ–¥! üéâ",
        "–¢—ã –∫–∞–∫ –∑–≤–µ–∑–¥–∞: —á–µ–º –±–æ–ª—å—à–µ —É—Å–∏–ª–∏–π –ø—Ä–∏–∫–ª–∞–¥—ã–≤–∞–µ—à—å, —Ç–µ–º —è—Ä—á–µ —Å–∏—è–µ—à—å! ‚ú®üåü",
        "–ö–∞–∂–¥—ã–π —à–∞–≥ ‚Äî —ç—Ç–æ –Ω–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤ —Ç–≤–æ–µ–π –∏—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞. –ü—Ä–æ–¥–æ–ª–∂–∞–π –ø–∏—Å–∞—Ç—å –µ—ë! üìñüî•",
        "–î–∞–∂–µ –º–∞–ª–µ–Ω—å–∫–∏–π —Ä—É—á–µ–π –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å —Ä–µ–∫–æ–π. –ü—Ä–æ–¥–æ–ª–∂–∞–π –¥–≤–∏–≥–∞—Ç—å—Å—è –≤–ø–µ—Ä—ë–¥! üíß‚û°Ô∏èüåä",
        "–¢—ã —É–∂–µ –ø–æ–±–µ–¥–∏–ª, –ø—Ä–æ—Å—Ç–æ –Ω–∞—á–∞–≤ —ç—Ç–æ—Ç –ø—É—Ç—å. –ê —Ç–µ–ø–µ—Ä—å –∏–¥–∏ –¥–∞–ª—å—à–µ –∏ –ø–æ–∫–æ—Ä—è–π –Ω–æ–≤—ã–µ –≤–µ—Ä—à–∏–Ω—ã! üèîÔ∏èüèÜ",
        "–°–µ–≥–æ–¥–Ω—è —Ç—ã –ª—É—á—à–µ, —á–µ–º –≤—á–µ—Ä–∞. –ê –∑–∞–≤—Ç—Ä–∞ –±—É–¥–µ—à—å –µ—â—ë –ª—É—á—à–µ. –¢–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å! ‚¨ÜÔ∏èüí™",
        "–¢—ã —Å–æ–∑–¥–∞—ë—à—å —Å–≤–æ—ë –±—É–¥—É—â–µ–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å. –ö–∞–∂–¥–æ–µ —É—Å–∏–ª–∏–µ ‚Äî —ç—Ç–æ –∫–∏—Ä–ø–∏—á–∏–∫ –≤ —Ç–≤–æ–π —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç —É—Å–ø–µ—Ö–∞! üèóÔ∏è‚ú®",
        "–¢—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –∏–¥—ë—à—å –∫ —Ü–µ–ª–∏ ‚Äî —Ç—ã —Å—Ç–∞–Ω–æ–≤–∏—à—å—Å—è —Ç–µ–º —á–µ–ª–æ–≤–µ–∫–æ–º, –∫–æ—Ç–æ—Ä—ã–π –¥–æ—Å—Ç–æ–∏–Ω –µ—ë –¥–æ—Å—Ç–∏—á—å! üöÄüéØ",
        "–£—Å–ø–µ—Ö –ª—é–±–∏—Ç —Ç–µ—Ö, –∫—Ç–æ –Ω–µ –±–æ–∏—Ç—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å. –¢—ã —É–∂–µ –Ω–∞ –ø—É—Ç–∏ –∫ –Ω–µ–º—É! üíºüí•",
        "–ü–æ–º–Ω–∏: –¥–∞–∂–µ —Å–∞–º—ã–π –¥–ª–∏–Ω–Ω—ã–π –ø—É—Ç—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –æ–¥–Ω–æ–≥–æ —à–∞–≥–∞. –ê —Ç—ã —É–∂–µ —Å–¥–µ–ª–∞–ª –µ–≥–æ! üë£üåç"
    ]

    # –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è 80% —Å–æ–æ–±—â–µ–Ω–∏–π
    if len(sent_messages) >= len(messages) * 0.8:
        sent_messages.clear()

    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—â–µ –Ω–µ –±—ã–ª–æ
    while True:
        msg = random.choice(messages)
        if msg not in sent_messages:
            sent_messages.add(msg)
            break

    time.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ 1 —Å–µ–∫—É–Ω–¥–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {msg}")
    bot.send_message(chat_id, msg)



# ====== –õ–æ–≥–∏–∫–∞ —á–∞—Ç–∞ ======
def forward_to_admin(message):
    """–ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"""
    try:
        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        forwarded = bot.forward_message(ADMIN_CHAT_ID, message.chat.id, message.message_id)
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–≤–µ—Ç–∞
        markup = types.InlineKeyboardMarkup()
        reply_button = types.InlineKeyboardButton(
            text="–û—Ç–≤–µ—Ç–∏—Ç—å",
            callback_data=f"reply_{message.chat.id}_{forwarded.message_id}"
        )
        markup.add(reply_button)
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
        bot.send_message(
            ADMIN_CHAT_ID,
            f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.first_name} (ID: {message.chat.id}):",
            reply_markup=markup
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        bot.reply_to(message, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")


@bot.callback_query_handler(func=lambda call: call.data.startswith("reply_"))
def handle_reply_callback(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–≤–µ—Ç–∞"""
    try:
        _, user_id, message_id = call.data.split('_')
        user_id = int(user_id)
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        user_admin_mapping[call.message.chat.id] = user_id
        save_data()
        # –ü—Ä–æ—Å–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤–≤–µ—Å—Ç–∏ –æ—Ç–≤–µ—Ç
        bot.send_message(
            call.message.chat.id,
            f"–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:",
            reply_markup=types.ForceReply(selective=False)
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback: {e}")
        bot.answer_callback_query(call.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞")


@bot.message_handler(func=lambda message: message.reply_to_message and message.chat.id == ADMIN_CHAT_ID)
def handle_admin_reply(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ user_admin_mapping
        user_id = user_admin_mapping.get(message.chat.id)
        if not user_id:
            bot.reply_to(message, "–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è –æ—Ç–≤–µ—Ç–∞.")
            return
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(user_id, f"üì® –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n{message.text}")
        bot.reply_to(message, "‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")
        # –£–¥–∞–ª—è–µ–º —Å–≤—è–∑—å
        if message.chat.id in user_admin_mapping:
            del user_admin_mapping[message.chat.id]
            save_data()
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {e}")
        bot.reply_to(message, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.")


# ====== –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ======

if __name__ == '__main__':
    load_data()
    while True:
        try:
            logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
            bot.polling(none_stop=True)
        except Exception as e:
            logging.critical(f"–û—à–∏–±–∫–∞: {e}")
            time.sleep(10)